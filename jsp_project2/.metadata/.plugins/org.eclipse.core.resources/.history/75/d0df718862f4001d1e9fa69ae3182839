package controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.BoardVO;
import service.BoardService;
import service.BoardServiceImpl;


@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    private static final Logger log= LoggerFactory.getLogger(BoardController.class);
    private RequestDispatcher rdp; //웹의 목적지 주소로 객체를 전달해주는 객체
    private String destPage;
    private int isOk;
    private BoardService bsv;
    
    public BoardController() {
        bsv = new BoardServiceImpl();
    }
    protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException{
    	// 캐릭터 인코딩 설정, 컨텐츠 타입 설정
    	request.setCharacterEncoding("utf-8");
    	response.setCharacterEncoding("utf-8");
    	response.setContentType("text/html; charset=utf-8");
    	
    	String uri = request.getRequestURI();
    	log.info(">>>uri>"+uri);
    	String path = uri.substring(uri.lastIndexOf("/")+1);
    	log.info(">>> path>"+path);
    	
    	switch(path) {
    	case "register":
    		destPage="/board/register.jsp";
    		break;
    	case "insert":
    		try {
				String tit = request.getParameter("title");
				String wri = request.getParameter("writer");
				String cont = request.getParameter("content");
				
				BoardVO bvo = new BoardVO(tit,wri,cont);
				isOk = bsv.insert(bvo);
				log.info(">>> register > "+ (isOk>0 ? "성공":"실패"));
				destPage="/";
			} catch (Exception e) {
				e.printStackTrace();
			}
    		break;
    	case "list":
    		try {
				List<BoardVO> list = new ArrayList<BoardVO>();
				list = bsv.list();
				request.setAttribute("list", list);
				log.info("list 성공~!!");
				log.info(">>> "+list.size());
				destPage="/board/list.jsp";
			} catch (Exception e) {
				e.printStackTrace();
			}
    		break;
    	case "detail" :
    		try {
				int bno = Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo = new BoardVO();
				bvo = bsv.detail(bno);
				request.setAttribute("bvo", bvo);
				log.info("detail 성공~!");
				destPage="/board/detail.jsp";
				
				
			} catch (Exception e) {
				e.printStackTrace();
			}
    		break;
    	case "modify":
    		try {
    			int bno = Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo = new BoardVO();
				bvo = bsv.modify(bno);
				request.setAttribute("bvo", bvo);
				destPage="/board/modify.jsp";
			} catch (Exception e) {
				e.printStackTrace();
			}
    		break;
    		
    	case "edit":
    		try {
				int bno = Integer.parseInt(request.getParameter("bno"));
				String tit = request.getParameter("title");
				String wri = request.getParameter("writer");
				BoardVO bvo = new BoardVO(bno,tit,wri);
				isOk = bsv.edit(bvo);
			} catch (Exception e) {
				// TODO: handle exception
			}
    		break;
    	}
    	
    	RequestDispatcher rdp = request.getRequestDispatcher(destPage);
    	rdp.forward(request, response);
    	
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
