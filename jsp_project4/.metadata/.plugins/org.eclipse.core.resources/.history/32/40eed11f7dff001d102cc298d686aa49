package Controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import Handler.PagingHandler;
import domain.BoardVO;
import domain.PagingVO;
import net.coobird.thumbnailator.Thumbnails;
import service.BoardService;
import service.BoardServiceImpl;


@WebServlet("/brd/*")
public class BoardController extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final Logger log = LoggerFactory.getLogger(BoardController.class);
	private RequestDispatcher rdp;
	private String destPage; 
	private int isOk; 
	private BoardService bsv;
	
	private String savePath;
	private final String UTF8="utf-8";
 
    public BoardController() {
    	bsv= new BoardServiceImpl();
    }


	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");
		
		String uri = request.getRequestURI();
		log.info(">>> uri > "+uri);
		String path = uri.substring(uri.lastIndexOf("/")+1);
		log.info(">>> path > "+path);
		
		switch(path) {
		case "register":
			destPage="/board/register.jsp";
			break;
			
		case "insert" :
			try {
				
				savePath = getServletContext().getRealPath("/_fileUpload");
				File fileDir = new File(savePath);
				
				DiskFileItemFactory filetemFactory = new DiskFileItemFactory();
				filetemFactory.setRepository(fileDir);
				filetemFactory.setSizeThreshold(2*1024*1024);
				
				BoardVO bvo = new BoardVO();
				
				ServletFileUpload fileUpload = new ServletFileUpload();
				
				List<FileItem> itemList = fileUpload.parseRequest(request);
				for(FileItem item : itemList) {
					switch(item.getFieldName()) {
					case "title":
						bvo.setTitle(item.getString(UTF8));
						break;
					case "writer":
						bvo.setWriter(item.getString(UTF8));
						break;
					case "content":
						bvo.setContent(item.getString(UTF8));
						break;
					case "image_file":
						if(item.getSize()>0) {
							String fileName = item.getName().substring(item.getName().lastIndexOf("/")+1);
							fileName = System.currentTimeMillis()+"_"+fileName;
							File uploadFilePath = new File(fileDir+File.separator+fileName);
							try {
								item.write(uploadFilePath);
								bvo.setImage_file(fileName);
								
								Thumbnails.of(uploadFilePath).size(75, 75)
								.toFile(new File(fileDir+File.separator+"th_"+fileName));
							} catch (Exception e) {
								e.printStackTrace();
							}
						}
						break;
					}
				}
				isOk=bsv.insert(bvo);
				destPage="page";
				
//				String title = request.getParameter("title");
//				String writer = request.getParameter("writer");
//				String content = request.getParameter("content");
//				
//				BoardVO bvo = new BoardVO(title,writer, content);
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage="/";
			break;
			
		case "list":
			try {
				List<BoardVO> list = bsv.getList();
				request.setAttribute("list", list);
				
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage="/board/list.jsp";
			break;
			
		case "page":
			try {
				int pageNo=1;
				int qty = 10;
				String type="";
				String keyword="";
				if(request.getParameter("type")!=null) {
					type= request.getParameter("type");
					keyword= request.getParameter("keyword");
					log.info(">>type : "+type+">>>keyword :"+keyword);	
				}
				if(request.getParameter("pageNo")!=null) {
					pageNo= Integer.parseInt(request.getParameter("pageNo"));
					qty= Integer.parseInt(request.getParameter("qty"));
				}
				
				PagingVO pgvo = new PagingVO(pageNo,qty);
				pgvo.setType(type);
				pgvo.setKeyword(keyword);
				
				int totCount = bsv.getTotal(pgvo);
				List<BoardVO> list = bsv.getPageList(pgvo);
				
				PagingHandler ph = new PagingHandler(pgvo, totCount);
				request.setAttribute("pgh", ph);
				request.setAttribute("list", list);
				destPage="/board/list.jsp";
			} catch (Exception e) {
				e.printStackTrace();
			}
			break;
		case "detail":
			try {
				int bno =Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo = bsv.getdetail(bno);
				request.setAttribute("bvo", bvo);
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage="/board/detail.jsp";
			break;
			
		case "modify":
			try {
				int bno= Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo= bsv.getdetail(bno);
				request.setAttribute("bvo", bvo);
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage="/board/modify.jsp";
			break;
		case "edit":
			try {
				String title = request.getParameter("title");
				String content = request.getParameter("content");
				int bno = Integer.parseInt(request.getParameter("bno"));
				BoardVO bvo = new BoardVO(bno,title,content);
				isOk= bsv.update(bvo);
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage="list";
			break;
			
		case "delete":
			try {
				int bno = Integer.parseInt(request.getParameter("bno"));
				isOk = bsv.delete(bno);
			} catch (Exception e) {
				e.printStackTrace();
			}
			destPage="list";
			break;
		}
		rdp = request.getRequestDispatcher(destPage);
		rdp.forward(request, response);
	}


	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request,response);
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request,response);
	}

}
