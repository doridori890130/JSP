package controller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;



import service.ProductService;
import service.Service;

//import 한번씩 확인하기

public class ProductController extends HttpServlet {
	private static final long serialVersionUID = 1L;  //서블릿의 시리얼 아이디
       // 상품등록, 상품리스트, 상품상세, 상품수정, 상품삭제
       // 컨트롤러 -> 서비스, 서비스-> DAO 호출 DAO - CBconnection
	private Service svc;
	
 
	//생성자
    public ProductController() {
     
    	svc= new ProductService();
    	
    	
    }
     
	protected void service(HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {
		// get / post 모든 처리는 service에서 처리함
		// post 방식으로 데이터 처리를 할 때 한글이 깨지는 것을 방지
		req.setCharacterEncoding("utf-8");
		res.setCharacterEncoding("utf-8");
		res.setContentType("text/html; charset=utf-8");
		
		String uri = req.getRequestURI();// 요청 경로(원하는 서비스) 컨트롤러주소/요청서비서
		System.out.println(">>>uri : "+uri);
		String context = req.getContextPath(); // 프로젝트명
		System.out.println(context);
		
		//객체를 보내야하는 목적지 주소
		String destPage="";
		switch(uri) {
		case "/register.pd" : 
			// /폴더명/jsp파일명.jsp
			destPage="/register.jsp";
			break;
		case "/insert.pd":
			//db 연결, 등록처리
			break;
		}
		
		//웹의 목적지 주소로 연결해주는 객체
		//destpage 로 이동시 응답,요청 객체를 싣고 가야함
		RequestDispatcher rdp = req.getRequestDispatcher(destPage);
	}

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// get 방식으로 오는 값을 체킹
		service(request,response);
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// post 방식으로 오는 값을 체킹
		
		service(request, response);
		//모든 요청을 서비스를 통해서 처리함
	}

}
